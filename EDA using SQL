-- Selecting the columns needed for 

SELECT location,date,total_cases, new_cases, total_deaths, population
FROM biproj.deaths
ORDER BY 1,2;

-- Looking at Total cases vs Total Deaths

SELECT location,date,total_cases, total_deaths, (total_deaths/total_cases) * 100 as DeathPercent
FROM biproj.deaths
WHERE location = 'Australia'
ORDER BY 1,2;

SELECT location,date,total_cases, total_deaths, (total_deaths/total_cases) * 100 as DeathPercent
FROM biproj.deaths
WHERE location = 'India'
ORDER BY 1,2;

-- Total cases vs population
SELECT location,date,total_cases, total_deaths, (total_cases/population) * 100 as percentageofpopulationinfected
FROM biproj.deaths
WHERE location = 'Australia'
ORDER BY 1,2;

SELECT location,date,total_cases, total_deaths, (total_cases/population) * 100 as percentageofpopulationinfected
FROM biproj.deaths
WHERE location = 'India'
ORDER BY 1,2;

-- Countries with highest infection rate compared to population
SELECT location,population,MAX(total_cases) AS HighestInfectionCount, MAX((total_cases/population)) * 100 as percentageofpopulationinfected
FROM biproj.deaths
GROUP BY location, population
ORDER BY percentageofpopulationinfected DESC;

-- Countries with Highest Death Count per Population

SELECT location, MAX(CAST(Total_deaths AS SIGNED)) AS TotalDeathCount
FROM biProj.deaths
Where continent IS NOT NULL 
GROUP BY location
ORDER BY TotalDeathCount DESC;


-- Global Numbers 

SELECT SUM(new_cases) AS total_cases, SUM(CAST(new_deaths AS SIGNED)) AS total_deaths, (SUM(CAST(new_deaths AS SIGNED))/SUM(New_Cases))*100 AS DeathPercentage
FROM biproj.deaths
-- Where location like '%states%'
WHERE continent IS NOT NULL
-- Group By date
ORDER BY 1,2;

-- Total population vs vaccinations

SELECT d.continent, d.location, d.date, d.population, v.new_vaccinations
FROM biproj.deaths d
JOIN biproj.vaccines v
	ON d.location = v.location
    AND d.date = v.date
WHERE d.continent IS NOT NULL
ORDER BY 2,3;

-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT d.continent, d.location, d.date, d.population, v.new_vaccinations
, SUM(CONVERT(v.new_vaccinations, SIGNED)) OVER (PARTITION BY  d.Location ORDER BY d.location, d.Date) AS RollingPeopleVaccinated
-- (RollingPeopleVaccinated/population)*100
FROM biproj.deaths d
JOIN biproj.vaccines v
	ON d.location = v.location
	AND d.date = v.date
WHERE d.continent is NOT NULL 
ORDER BY 2,3;


-- Using CTE

WITH PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(vac.new_vaccinations, Signed)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From biproj.deaths dea
Join biproj.vaccines vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac;


-- Temp Table




-- View for viz

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(vac.new_vaccinations, Signed)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated

From biproj.deaths dea
Join biproj.vaccines vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null; 






